
    upstream tornados {
        server 127.0.0.1:8888;        
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream websocket {
        server 127.0.0.1:8888;
    }

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;


	location / {
        proxy_pass http://tornados;
		proxy_set_header Host $host;
		proxy_pass_request_headers on;
		proxy_pass_request_body on;
		proxy_hide_header Public-key-pins;
    
        location /protected {
            auth_request /auth;
            proxy_pass http://tornados;
		    proxy_pass_request_headers on;
		    proxy_pass_request_body on;
		    proxy_hide_header Public-key-pins;
    	}
            
	}


    location = /auth {
        internal;
        proxy_pass http://localhost:8888;
        #proxy_set_header Content-Length "";
        #proxy_pass_request_body off;
        proxy_set_header X-Auth-URI $request_uri;
    }


    location /ws {
        auth_request /auth;
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
